%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../usercontrib-data/plot-hist-numedits.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sat May 10 20:43:07 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../usercontrib-data/plot-hist-numedits.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Bo Adler,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 10 20:43:07 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1380 600 M
63 0 V
5417 0 R
-63 0 V
stroke
1260 600 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1380 853 M
31 0 V
5449 0 R
-31 0 V
1380 1187 M
31 0 V
5449 0 R
-31 0 V
1380 1359 M
31 0 V
5449 0 R
-31 0 V
-5449 81 R
63 0 V
5417 0 R
-63 0 V
stroke
1260 1440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1380 1693 M
31 0 V
5449 0 R
-31 0 V
1380 2027 M
31 0 V
5449 0 R
-31 0 V
1380 2199 M
31 0 V
5449 0 R
-31 0 V
-5449 81 R
63 0 V
5417 0 R
-63 0 V
stroke
1260 2280 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MRshow
1.000 UL
LTb
1380 2533 M
31 0 V
5449 0 R
-31 0 V
1380 2867 M
31 0 V
5449 0 R
-31 0 V
1380 3039 M
31 0 V
5449 0 R
-31 0 V
-5449 81 R
63 0 V
5417 0 R
-63 0 V
stroke
1260 3120 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10000)]
] -66.7 MRshow
1.000 UL
LTb
1380 3373 M
31 0 V
5449 0 R
-31 0 V
1380 3707 M
31 0 V
5449 0 R
-31 0 V
1380 3879 M
31 0 V
5449 0 R
-31 0 V
-5449 81 R
63 0 V
5417 0 R
-63 0 V
stroke
1260 3960 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100000)]
] -66.7 MRshow
1.000 UL
LTb
1380 4213 M
31 0 V
5449 0 R
-31 0 V
1380 4547 M
31 0 V
5449 0 R
-31 0 V
1380 4719 M
31 0 V
5449 0 R
-31 0 V
-5449 81 R
63 0 V
5417 0 R
-63 0 V
stroke
1260 4800 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1e+06)]
] -66.7 MRshow
1.000 UL
LTb
1380 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1380 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
2015 600 M
0 31 V
0 4169 R
0 -31 V
2386 600 M
0 31 V
0 4169 R
0 -31 V
2650 600 M
0 31 V
0 4169 R
0 -31 V
2854 600 M
0 31 V
0 4169 R
0 -31 V
3021 600 M
0 31 V
0 4169 R
0 -31 V
3162 600 M
0 31 V
0 4169 R
0 -31 V
3284 600 M
0 31 V
0 4169 R
0 -31 V
3392 600 M
0 31 V
0 4169 R
0 -31 V
3489 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3489 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
4123 600 M
0 31 V
0 4169 R
0 -31 V
4495 600 M
0 31 V
0 4169 R
0 -31 V
4758 600 M
0 31 V
0 4169 R
0 -31 V
4963 600 M
0 31 V
0 4169 R
0 -31 V
5130 600 M
0 31 V
0 4169 R
0 -31 V
5271 600 M
0 31 V
0 4169 R
0 -31 V
5393 600 M
0 31 V
0 4169 R
0 -31 V
5501 600 M
0 31 V
0 4169 R
0 -31 V
5597 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5597 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
6232 600 M
0 31 V
0 4169 R
0 -31 V
6603 600 M
0 31 V
0 4169 R
0 -31 V
6867 600 M
0 31 V
0 4169 R
0 -31 V
stroke
1380 4800 N
0 -4200 V
5480 0 V
0 4200 V
-5480 0 V
Z stroke
LCb setrgbcolor
200 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Users)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4120 100 M
[ [(Helvetica) 200.0 0.0 true true 0 (Number of Edits)]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 200 scalefont setfont
1380 4385 Pls
2015 4056 Pls
2386 3827 Pls
2650 3657 Pls
2854 3514 Pls
3021 3399 Pls
3162 3301 Pls
3284 3208 Pls
3392 3126 Pls
3489 3065 Pls
3576 3003 Pls
3656 2942 Pls
3729 2884 Pls
3797 2838 Pls
3860 2787 Pls
3919 2757 Pls
3975 2717 Pls
4027 2687 Pls
4076 2641 Pls
4123 2611 Pls
4168 2582 Pls
4211 2549 Pls
4251 2522 Pls
4290 2486 Pls
4328 2462 Pls
4364 2456 Pls
4398 2425 Pls
4432 2411 Pls
4464 2368 Pls
4495 2358 Pls
4525 2347 Pls
4554 2309 Pls
4582 2284 Pls
4609 2272 Pls
4636 2250 Pls
4662 2266 Pls
4687 2216 Pls
4711 2211 Pls
4735 2219 Pls
4758 2199 Pls
4781 2179 Pls
4803 2165 Pls
4824 2136 Pls
4846 2093 Pls
4866 2107 Pls
4886 2109 Pls
4906 2064 Pls
4925 2081 Pls
4944 2068 Pls
4963 2042 Pls
4981 1999 Pls
4998 2018 Pls
5016 2026 Pls
5033 2002 Pls
5050 1949 Pls
5066 1981 Pls
5083 1967 Pls
5098 1953 Pls
5114 1936 Pls
5130 1932 Pls
5145 1903 Pls
5160 1895 Pls
5174 1910 Pls
5189 1874 Pls
5203 1871 Pls
5217 1895 Pls
5231 1894 Pls
5244 1838 Pls
5258 1814 Pls
5271 1828 Pls
5284 1879 Pls
5297 1796 Pls
5309 1794 Pls
5322 1838 Pls
5334 1794 Pls
5346 1774 Pls
5358 1793 Pls
5370 1773 Pls
5381 1781 Pls
5393 1768 Pls
5404 1733 Pls
5416 1770 Pls
5427 1698 Pls
5438 1767 Pls
5449 1753 Pls
5459 1742 Pls
5470 1714 Pls
5480 1724 Pls
5491 1716 Pls
5501 1752 Pls
5511 1650 Pls
5521 1672 Pls
5531 1648 Pls
5541 1666 Pls
5550 1670 Pls
5560 1629 Pls
5569 1685 Pls
5579 1607 Pls
5588 1590 Pls
5597 1642 Pls
5606 1631 Pls
5615 1623 Pls
5624 1607 Pls
5633 1620 Pls
5642 1605 Pls
5651 1560 Pls
5659 1623 Pls
5668 1536 Pls
5676 1563 Pls
5685 1563 Pls
5693 1565 Pls
5701 1536 Pls
5709 1547 Pls
5717 1576 Pls
5725 1488 Pls
5733 1557 Pls
5741 1565 Pls
5749 1521 Pls
5757 1536 Pls
5764 1481 Pls
5772 1536 Pls
5779 1557 Pls
5787 1513 Pls
5794 1451 Pls
5802 1507 Pls
5809 1497 Pls
5816 1417 Pls
5823 1458 Pls
5831 1451 Pls
5838 1500 Pls
5845 1454 Pls
5852 1471 Pls
5859 1454 Pls
5865 1417 Pls
5872 1485 Pls
5879 1451 Pls
5886 1397 Pls
5892 1440 Pls
5899 1458 Pls
5905 1381 Pls
5912 1376 Pls
5918 1385 Pls
5925 1454 Pls
5931 1349 Pls
5938 1393 Pls
5944 1363 Pls
5950 1425 Pls
5956 1468 Pls
5963 1385 Pls
5969 1385 Pls
5975 1368 Pls
5981 1421 Pls
5987 1385 Pls
5993 1320 Pls
5999 1345 Pls
6005 1372 Pls
6010 1363 Pls
6016 1363 Pls
6022 1385 Pls
6028 1359 Pls
6033 1283 Pls
6039 1363 Pls
6045 1335 Pls
6050 1349 Pls
6056 1389 Pls
6061 1294 Pls
6067 1315 Pls
6072 1325 Pls
6078 1363 Pls
6083 1266 Pls
6089 1397 Pls
6094 1294 Pls
6099 1228 Pls
6105 1315 Pls
6110 1315 Pls
6115 1222 Pls
6120 1283 Pls
6125 1340 Pls
6131 1310 Pls
6136 1228 Pls
6141 1305 Pls
6146 1288 Pls
6151 1201 Pls
6156 1345 Pls
6161 1271 Pls
6166 1165 Pls
6171 1288 Pls
6175 1222 Pls
6180 1277 Pls
6185 1266 Pls
6190 1283 Pls
6195 1201 Pls
6199 1172 Pls
6204 1187 Pls
6209 1254 Pls
6214 1241 Pls
6218 1187 Pls
6223 1208 Pls
6228 1201 Pls
6232 1271 Pls
6237 1187 Pls
6241 1248 Pls
6246 1172 Pls
6250 1201 Pls
6255 1241 Pls
6259 1228 Pls
6264 1248 Pls
6268 1087 Pls
6272 1222 Pls
6277 1157 Pls
6281 1235 Pls
6285 1208 Pls
6290 1194 Pls
6294 1141 Pls
6298 1215 Pls
6303 1157 Pls
6307 1215 Pls
6311 1228 Pls
6315 1157 Pls
6319 1187 Pls
6324 1077 Pls
6328 1157 Pls
6332 1157 Pls
6336 1228 Pls
6340 1087 Pls
6344 1208 Pls
6348 1149 Pls
6352 1115 Pls
6356 1201 Pls
6360 1157 Pls
6364 1124 Pls
6368 1096 Pls
6372 1036 Pls
6376 1180 Pls
6380 1165 Pls
6384 1096 Pls
6388 1124 Pls
6391 1194 Pls
6395 1141 Pls
6399 976 Pls
6403 1165 Pls
6407 1106 Pls
6410 1013 Pls
6414 1024 Pls
6418 1132 Pls
6422 1201 Pls
6425 1106 Pls
6429 1124 Pls
6433 1141 Pls
6436 1124 Pls
6440 988 Pls
6444 1067 Pls
6447 934 Pls
6451 1141 Pls
6455 1087 Pls
6458 1024 Pls
6462 1087 Pls
6465 1087 Pls
6469 1115 Pls
6472 1067 Pls
6476 1077 Pls
6479 1149 Pls
6483 1132 Pls
6486 1057 Pls
6490 988 Pls
6493 1024 Pls
6497 853 Pls
6500 1077 Pls
6504 1057 Pls
6507 1149 Pls
6510 1067 Pls
6514 1036 Pls
6517 1096 Pls
6520 988 Pls
6524 1036 Pls
6527 1001 Pls
6530 934 Pls
6534 1036 Pls
6537 919 Pls
6540 1024 Pls
6544 962 Pls
6547 976 Pls
6550 949 Pls
6553 1046 Pls
6556 1096 Pls
6560 1013 Pls
6563 1057 Pls
6566 1001 Pls
6569 934 Pls
6572 934 Pls
6576 1087 Pls
6579 1001 Pls
6582 919 Pls
6585 1087 Pls
6588 904 Pls
6591 988 Pls
6594 919 Pls
6597 1057 Pls
6600 1046 Pls
6603 1024 Pls
6606 962 Pls
6610 1036 Pls
6613 949 Pls
6616 1024 Pls
6619 988 Pls
6622 919 Pls
6625 934 Pls
6628 949 Pls
6631 904 Pls
6633 853 Pls
6636 962 Pls
6639 1077 Pls
6642 888 Pls
6645 853 Pls
6648 962 Pls
6651 1077 Pls
6654 834 Pls
6657 888 Pls
6660 1057 Pls
6663 1001 Pls
6665 1036 Pls
6668 794 Pls
6671 904 Pls
6674 1057 Pls
6677 1001 Pls
6680 949 Pls
6682 871 Pls
6685 904 Pls
6688 962 Pls
6691 988 Pls
6693 794 Pls
6696 771 Pls
6699 988 Pls
6702 904 Pls
6704 853 Pls
6707 988 Pls
6710 748 Pls
6713 949 Pls
6715 814 Pls
6718 794 Pls
6721 919 Pls
6723 834 Pls
6726 934 Pls
6729 871 Pls
6731 1077 Pls
6734 748 Pls
6737 934 Pls
6739 904 Pls
6742 919 Pls
6745 748 Pls
6747 976 Pls
6750 976 Pls
6752 888 Pls
6755 771 Pls
6758 888 Pls
6760 888 Pls
6763 794 Pls
6765 888 Pls
6768 834 Pls
6770 949 Pls
6773 814 Pls
6775 871 Pls
6778 919 Pls
6781 1036 Pls
6783 871 Pls
6786 949 Pls
6788 834 Pls
6791 934 Pls
6793 888 Pls
6795 853 Pls
6798 871 Pls
6800 871 Pls
6803 748 Pls
6805 771 Pls
6808 723 Pls
6810 919 Pls
6813 1001 Pls
6815 794 Pls
6818 696 Pls
6820 962 Pls
6822 794 Pls
6825 834 Pls
6827 814 Pls
6830 771 Pls
6832 962 Pls
6834 988 Pls
6837 962 Pls
6839 794 Pls
6841 748 Pls
6844 771 Pls
6846 834 Pls
6848 794 Pls
6851 771 Pls
6853 814 Pls
6855 904 Pls
6858 794 Pls
6860 1024 Pls
1.000 UL
LTb
1380 4800 N
0 -4200 V
5480 0 V
0 4200 V
-5480 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
